! ********** Preamble Section **********
! This command file does a double cantilever beam specimen to test crack methods

! ********** Preamble Section **********
Title "DCB Specimen"
Name "John Nairn"

! ------------ Parameters ---------------

! Analysis type: "Plane Strain MPM", "Plane Stress MPM"
#analysis="Plane Strain MPM"
Processors 4

! Points per element
#ppe=2
XMLData MPMHeader
    <DefGradTerms>2</DefGradTerms>
EndXMLData

! pick a method usually "lCPDI" or "uGIMP"
#method="uGIMP"

! pick strain update method usually "USF" or "USAVG"
#update="USF"

! Supported materials: "isotropic"
#matID="isotropic"

! Traction law for pre-existing crack or new crack (or "" to omit)
#tractID=""

! temperature option to test energy coupling
StressFreeTemp 294
#startTemp=294

! Basic properties
#Ebase=2500
#rho=1.2
#nuBase=.33
#aBase=60
#JIc=500

! Dimensions
#cwidth=2				! cell width
#cheight=2				! cell height
#length=100				! Length in mm (mult of cwidth)
#depth=12				! Depth in mm (mult of cheight)
#width=1				! Width in mm

! crack properties
#tip=50					! crack tip location
#trtip=0				! for additional traction law crack surface

! Load by stress or by velocity (if stress<=0)
#loading="force"		! Loading = "rigid", "force", "traction"
#rate=.05				! fraction on axial wave speed
#endDisp=2				! end deflection in mm
#propagate="critical err"	        ! empty for none, or "critical err"

! Loading rate
#hold=0				! hold time (multiple of loading time)
#unload=0		    ! 0 no unload or >0 for unloading time (multiple of loading time, but at same loading rate)

! Damping parameter - for feedback or grid damping
#damp=1000
#fbdamp=0.0
#factor=0.4			! time step factor

! ------------ Calculations ---------------
! Header
Header
Double cantilever beam (DCB) specimen
EndHeader

Analysis #analysis
MPMMethod #update,#method

! Loading rate - end deflection one arm per unit load is L^3/(3EI) 
#crack=#length-#tip
#armI=#width*#depth^3/12
#defl=#crack^3/(3*#Ebase*#armI)			! mm/N

! gave wave speed
if #matID="isotropic"
  #wave=sqrt(1000*#Ebase/#rho)			! m/s = mm/msec
endif

#rate=#rate*#wave/100					! end rate in mm/msec
if #loading="force"
  ! #defl*(force rate) is end deflection in mm/msec = #rate
  #forcerate=#rate/#defl
endif

! loading time
#loadtime=#endDisp/#rate				! msec
#maxTime=#loadtime*(1+#hold+#unload)

! ********** MPM Header **********
Archive "Results/DCB/"&#analysis&" "&#method&"-"&#update&"/"&#loading&"/"&#matID
TimeStep 1000,#maxTime,#factor
ArchiveTime #maxTime/50
ToArchive velocity,stress,strain,rotstrain
ToArchive strainenergy,externalwork,stressintensity,jintegral

GlobalArchive syy
GlobalArchive eyy
GlobalArchive "Strain Energy"
GlobalArchive "Kinetic Energy"

if #fbdamp>0
  FeedbackDamping #fbdamp
  GlobalArchive alpha
endif
if #damp>0
  Damping #damp
endif

! ********** MATERIALS SECTION **********
if #matID="isotropic"

  Material #matID,"Polymer","Isotropic"    E #Ebase    nu #nuBase    a #aBase    rho #rho
    JIc #JIc
  Done

endif

if #tractID="cubic"

  Material,#tractID,"Cubic Traction Law","CubicTraction"
    JIc #JIc
    sigmaI 50
    JIIc #JIc
    sigmaII 50
  Done

else if #tractID="triangular"

  Material,#tractID,"Triangular Traction Law","TriangularTraction"
    JIc #JIc
    sigmaI 1
    delpkI .1
    JIIc #JIc
    sigmaII 1
    delpkII .1
  Done

endif
! propagation
if #propagate!=""
  if #tractID!=""
    Propagate #propagate,"default",#tractID
  else
    Propagate #propagate
  endif
endif

! ********** GRID SECTION ***********
#ledge=#cwidth			! left edge extra space (mult of cwidth)
#redge=2*#cwidth		! right edge extra space (mult of cwidth)
#top=6*#cheight			! top and bottom extra space (mult of cheight)

! horizontal and verticle number of cells
#horiz=(#length+#ledge+#redge)/#cwidth
#vert=(#depth+#top)/#cheight

GridThickness #width
GridHoriz #horiz
GridVert 2*#vert
GridRect -#ledge,#length+#redge,-#depth-#top,#depth+#top! ********* MATERIAL POINT SECTION *****
Region #matID,0,0,#width
  Rect 0,#length,-#depth,#depthEndRegion

! ********* CRACKS SECTION *****
#res=int(#crack/#cwidth)+1
NewCrack #length-#cwidth/4,-1e-6,"exterior"
GrowCrackLine #tip+(#cwidth/10),-1e-6,#res,#matID

if #trtip>0
  #res=int(2*#trtip/#cwidth)+1
  if #tractID!=""
    GrowCrackLine #tip-#trtip+(#cwidth/10),-1e-6,#res,#matID,#tractID
  else
    GrowCrackLine #tip-#trtip+(#cwidth/10),-1e-6,#res,#matID
  endif
endif
! ***** BOUNDARY CONDITION SECTION *****
MoveLine -#cwidth/2,-#depth-#top,-#cwidth/2,#depth+#top,0.51*#cwidth
  Velocity x,constant,0
  Velocity y,constant,0
EndMoveLine

! time part
!    = t for t < loadtime
!    = loadTime for loadtime < t < endhold
!    = loadTime - (t-holdtime) for t > endhold
#endhold=#loadtime*(1+#hold)
#ftime="t*sign("&#loadtime&"-t)+"&#loadtime&"*sign(t-"&#loadtime&")"
if #unload>0
  #ftime = #ftime&"(t-"&#endhold&")*sign(t-"&#endhold&")"
endif
! end loads on beam armsif #loading="force"
  LoadRect #length-(#cwidth/2),#length,0,#depth
    LoadType net
    Load y,function,#forcerate&"("&#ftime&")"
  EndLoadRect  LoadRect #length-(#cwidth/2),#length,-#depth,0
    LoadType net
    Load y,function,(-#forcerate)&"("&#ftime&")"
  EndLoadRect
else if #loading="traction"
  Stop "traction not ready yet"
else if #loading="rigid"
  Stop "rigid not ready yet"
  Material "rigid","Rigid Grip","Rigid"
    direction 2
  Done
  Region "rigid",0,#rvel,#width
    Rect #length-2*#cwidth,#length,#depth,#depth+#cheight
  EndRegion
  Region "rigid",0,-#rvel,#width
    Rect #length-2*#cwidth,#length,-#depth-#cheight,-#depth
  EndRegion
EndIf

