! ********** Introduction **********

! ********** Preamble Section **********
Title "MPM Analysis of Compressed Solid Disk"
Name "John A. Nairn"

! Header
Header
  A solid or hollow disk with internal and/or external
  pressure in axisymmetric MPM analysis
EndHeader

Analysis "Axisymmetric MPM"
#method$="uGIMP"
MPMMethod USF,#method$
Processors 4

! ********** Parameters Section **********
#length=50                  ! Length in mm
#depth=10                   ! Depth in mm
#thick=10                   ! Thickness in mm
#inner=0

! "force" or "traction" to apply #Po on outside (if not zero)
!      and Pi on inside (if not zero and inner>0)
! "rigid" to compression outside to dR = #length*#errmax and
!      nothing on inside
#style$="rigid"				
#Po=-8000
#Pi=0
#errmax=0.6

#Ebase=2300
#rhobase=1.2
#abase=60
#nubase=.33

! "isoptropic" or "neomooney"
#matID$="neomooney"

#mult=100					! transit times for complete analysis
#cflFactor=0.4
#rampfraction=1.0			! fraction to full pressure

#cell=2.5
#border=2

#zconfine$="both"			! confine z bottom, top, or both
#initVelocity$="no"			! yes or no to set particles to initial velocity in r direction

! Calculate maximum and ramp times
#speed=sqrt(1000*#Ebase/#rhobase)		! in mm/msec
#transit=(#length-#inner)/#speed		! in msec
#maxtime=#mult*#transit
#ramp=#maxtime*#rampfraction

Archive "Results/Disk_"&#method$&"_"&#style$&"/ASMPM"
ArchiveTime #maxtime/25
TimeStep 1,#maxtime,#cflFactor
PtsPerElement 2
LeaveLimit 100
!FeedbackDamping .2
Damping 0,0

GlobalArchive sxx
GlobalArchive exxe
GlobalArchive syy
GlobalArchive eyye
GlobalArchive szz
GlobalArchive ezze
!GlobalArchive alpha
GlobalArchive "Grid Kinetic Energy"

ToArchive velocity,stress,strain,strainenergy,elementcrossings,rotStrain
! plastic strain is Left Cauchy Green Strain, history 1 is J or volumetric strain
ToArchive plasticstrain,history1

! ********** Materials Section **********

if #matID$="isotropic"
  Material #matID$,"Polymer","Isotropic"
    E #Ebase
    nu #nubase
    a #abase
    rho #rhobase
  Done

else if #matID$="neomooney"
  #G1=#Ebase/(2*(1+#nubase))
  #G2=0
  #G0=#G1+#G2
  #Kbulk=#Ebase/(3*(1-2*#nubase))
  Material #matID$,"Neohookean Mooney Material","Mooney"
    G1 #G1
    G2 #G2
    K #Kbulk
    a #abase
    rho #rhobase
  Done
  
endif

if #style$="rigid"
  #maxDisp = #length*#errmax
  #rate = #maxDisp/#ramp
  #rfxn$ = (-1000*#rate)&"*(1-sign(t-"&#ramp&"))"
  Material "rigid","Rigid Piston","Rigid"
    direction 1
    SettingFunction #rfxn$
    mirrored 1
  Done
endif

! ********** Grid and Material Points Section **********

GridHoriz (#length+2*#border*#cell)/#cell
if #zconfine$="bottom"
  GridVert (#depth+2*#border*#cell)/#cell,0,-1
else if #zconfine$="top"
  GridVert (#depth+2*#border*#cell)/#cell,#depth,1
else if #zconfine$="both"
  GridVert (#depth+2*#border*#cell)/#cell,#depth,1,0
endif
GridThickness #thick
GridRect -#border*#cell,#length+#border*#cell,-#border*#cell,#depth+#border*#cell

if #initVelocity$="yes"
  Entity "thick",#thick
  Entity "vx",(-1000*#rate/#length)&"*x"
  Entity "xmin",#inner
  Entity "xmax",#length
  Entity "ymax",#depth
  XMLData "MaterialPoints"
    <Body mat="1" thick="&thick;" vx="0" vy="0">
      <vel0X>&vx;</vel0X>
      <Rect xmin="&xmin;" xmax="&xmax;" ymin="0" ymax="&ymax;"/>
    </Body>
  EndXMLData
else
  Region #matID$,0,0,#thick
    Rect #inner,#length,0,#depth
  EndRegion
endif

! ********** Boundary Conditions Section **********

! Internal pressure or fixed dislacement
if #inner<=0
  MoveLine #inner-#cell/2,-#border*#cell,#inner-#cell/2,#depth+#border*#cell,0.55*#cell
    Velocity x,constant,0
  EndMoveLine
else if #style$!="rigid"
  if #Pi!=0
    LoadLine #inner,0,#inner,#depth,#cell/2
      if #style$="force"
        LoadType net
        Load x,linear,-#Pi*#depth*#length/#ramp
        Load x,linear,#Pi*#depth*#length/#ramp,#ramp
      else
        Traction x,2,linear,-#Pi/#ramp
        Traction x,2,linear,#Pi/#ramp,#ramp
      endif
    EndLoadLine
  endif
endif

! Outside pressure
if #style$="rigid"
  Region "rigid",0,0,#thick
    Rect #length,#length+2*#cell,-2*#cell,#depth+2*#cell
  EndRegion
else
  if #Po!=0
    LoadLine #length,0,#length,#depth,#cell/2
      if #style$="force"
        LoadType net
        Load x,linear,#Po*#depth*#length/#ramp
        Load x,linear,-#Po*#depth*#length/#ramp,#ramp
      else
        Traction x,2,linear,#Po/#ramp
        Traction x,2,linear,-#Po/#ramp,#ramp
      endif
    EndLoadLine
  endif
endif

