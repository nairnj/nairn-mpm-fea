! ********** Preamble Section **********
! This command file does uniaxial loading of hyperelastic material.
! The loading is the the x direction and can be tension or compression (using + or - #strain variable).
! The right edge of the specimen if fixed, the loaded edge can be loading by rigid particles,
!    contact rigid particles, particle forces, or particle tractions.
! The sides can be fixed (for contrained loading and simpler deformation state) or be free
!    for simple tensile test.
! Calculations can be 2D or 3D.
Title "Hyperelasstic Tensile Loading"
Name "John Nairn"

! Header/Notes
Header
Uniaxial loading in the x direction on a hyperelastic material
EndHeader

! ------------ Parameters ---------------

! Analysis type: "Plane Strain MPM", "Plane Stress MPM", or "3D MPM"
#analysis$="Plane Strain MPM"
!Processors 4
XMLData "Header"
    <DevelFlag Number='3'>040101</DevelFlag>
EndXMLData

! Points per element
#ppe=2
XMLData MPMHeader
    <DefGradTerms>2</DefGradTerms>
EndXMLData

! pick a method usually "lCPDI" or "uGIMP"
#method$="uGIMP"

! pick strain update method usually "SZS" or "USAVG"
#update$="USAVG"

! Supported materials:
!     Elastic: "neomooney" (G2=0), "mooney" (G1=G2), "neohookean"
!	  Plastic: heiso, "PMMA" (uses HEMGEOSMaterial), "clampedneohookean"
#matID$="neomooney"

! hardening law (if plastic) for current material (not all available for all materials)
!	options Linear, Nonlinear, Nonlinear2, JohnsonCook, SCGL, SL
#hardID$="Linear"

! temperature option to test energy coupling
StressFreeTemp 294
#startTemp=294

! Basic properties
#Ebase=100
#rho=1
#nuBase=.33
#aBase=60
#yldstrain=2		! in percent

! Chage for special case materials
if #matID$="PMMA"
  #gamma0 = 0.85
  #C0=2180
  #rho=1.181
  #CV = 1466
  #Kbase = #rho*#C0^2/1000
  #Gbase = 2320
  #Gbase = 1000
  #Ebase=9*#Kbase*#Gbase/(3*#Kbase+#Gbase)
  #nuBase=(3*#Kbase-2*#Gbase)/(6*#Kbase+2*#Gbase)
  #aBase = #gamma0*#CV*1e6/(3*#C0*#C0)
endif

! Dimensions
#cell=1
#length=20			! length
#width=5			! width
#thick=1			! thickness

! Load by stress or by velocity (if stress<=0)
#loading$="rigid"	! Loading = "rigid", "force", "traction", "thermal", "contact", "grid"

! Side BCs = "symmetry" to constrain y direction (and z direction if 3D), "no" for no contraint,
! "BC1" or "BC2" to use one or two layers of BCs instead of symmetry planes
#fixsides$="no"

! #base = "symmetry" for symmetry plane, "BC1" for 1 layer or "BC2" for two layers
#base$="symmetry"	

! test settings
#gridStrain=50		! room in grid (ignored if #strain<0)
#strain=5	        ! Maximum strain (%) (stress needed is estimated for force and tractions), or dT for thermal
#relRate=.2		    ! Displacement rate as percent of wave speed of material
#factor=0.4		    ! time step factor

! Loading rate
#hold=0 			! hold time (multiple of loading time)
#unload=0		    ! 0 no unload or >0 for unloading time (multiple of loading time, but at same loading rate)

! Damping parameter - for feedback, grid damping, and/or PIC fraction
#damp=0
#pdamp=0
#fbdamp=0
#pfbdamp=0
#fractionPIC=0
XMLData "MPMHeader"
    <!--<ExtrapolateRigid/>-->
EndXMLData

! ------------ Calculations ---------------

! Analysis type
Analysis #analysis$
MPMMethod #update$,#method$
PtsPerElement #ppe
conduction "yes","isothermal"

! convert to contact
if #loading$="contact"
  MultimaterialMode 0,enabled,"specify",180,0
  !ImperfectInterfaceMM 0,1e15
endif

! base line calculations
#G1=#Ebase/(2*(1+#nuBase))
#G2=0
#Kbulk=#Ebase/(3*(1-2*#nuBase))
if #matID$="mooney"
  !#G1=#G1/2
  !#G2=#G1
endif
#G0=#G1+#G2

! estimate stress to reach strain (only used if force or tractions)
if #fixsides$!="symmetry"
  #stress=#Ebase*#strain/100
else
  #stress=#Kbulk*#strain/100
endif

! estimate strain if thermal
if #loading$="thermal"
  #deltaT=#strain
  #strain=#aBase*#deltaT/10000
  #stress=0
endif

! calculate time to reach peak state
#speed=1000*sqrt(1000*(#Kbulk+4*#G0/3)/#rho)	! wave speed (mm/sec)

#disp=#strain*#length/100				! mm of displacement to get to strain
#disprate=#relRate*#speed/100			! dispacement rate (mm/sec)
#time=1000*abs(#disp)/#disprate			! time to peak load in ms

! Archiving
if #fixsides$="symmetry"
  Archive "Results/HEConstrainedTension/"&#analysis$&"-"&#method$&"-"&#update$&"-"&#loading$&"/"&#matID$
else
  Archive "Results/HETension/"&#analysis$&"-"&#method$&"-"&#update$&"-"&#loading$&"/"&#matID$
endif
TimeStep 1000,(1+#hold+#unload)*#time,#factor
!MaximumTime (1+#hold+#unload)*#time
ArchiveTime (1+#hold+#unload)*#time/50
ToArchive velocity,stress,strain,strainenergy,elementcrossings,rotStrain
! plastic strain is Left Cauchy Green Strain, history 2 is J or volumetric strain (except some hardening laws)
ToArchive plasticstrain,history1,history2,plasticenergy,temperature,heatenergy
Comment "Load time = "&#time&" ms"
Comment "Hold time = "&#hold&" ms"

! ********** Materials Section **********

if #matID$="neomooney"
  Material #matID$,"Neohookean Mooney Material","Mooney"
    G1 #G1
    G2 #G2
    K #Kbulk
    a #aBase
    rho #rho
    kCond .202
    Cv 1256
    UJOption 0
    !ArtificialVisc on
    !IdealRubber 1
  Done
endif

if #matID$="neohookean"
  Material #matID$,"Neohookean Material","Neohookean"
    E #Ebase
    nu #nuBase
    rho #rho
    alpha #aBase
    UJOption 2
  Done
endif

if #matID$="clampedneohookean"
  Material #matID$,"Neohookean Material","ClampedNeohookean"
    E #Ebase
    nu #nuBase
    rho #rho
    alpha #aBase
    UJOption 2
    Elastic 1
    CritTens #yldstrain/100
    CritComp #yldstrain/100
    xihard 1
  Done
endif

if #matID$="mooney"
  Material #matID$,"Mooney-Rivlin Material","Mooney"
    G1 #G1
    G2 #G2
    K #Kbulk
    a #aBase
    rho #rho
    kCond .202
    Cv 1256
  Done
endif

if #matID$="heiso"
  Material #matID$,"HE Isotropic Plastic","HEIsotropic"
    G1 #G1
    !G2 #G2
    K #Kbulk
    a #aBase
    rho #rho
    hardening #hardID$
    if #hardID$="Linear"
      yield abs(#Ebase*#yldstrain/100)
      Ep #Ebase/5
    else if #hardID$="Nonlinear"
      yield 4
      Khard 50
      nhard .5
    else if #hardID$="Nonlinear2"
      yield 40
      Khard 2
      nhard .2
    else if #hardID$="JohnsonCook"
      Ajc abs(#Ebase*#yldstrain/100)
      Bjc abs(#Ebase*#yldstrain/100)/5
      Cjc 0
      njc 1
      mjc 3
      ep0jc 1
      Tmjc 393
    else if #hardID$="SCGL"
      yield abs(#Ebase*#yldstrain/100)
      betahard 10
      nhard 1
      yieldMax 10*abs(#Ebase*#yldstrain/100)
      GPpG0 .001
      GTpG0 .002
    else if #hardID$="SL"
      yield abs(#Ebase*#yldstrain/100)
      betahard 10
      nhard 1
      yieldMax 10*abs(#Ebase*#yldstrain/100)
      GPpG0 .001
      GTpG0 .002
      C1SL .71e6
      C2SL .012
      Yp 3
      Uk .31
    endif
    UJOption 0
    kCond .202
    Cv 1256
  Done
endif

if #matID$="PMMA"
  Material "PMMA","PMMA","HEMGEOSMaterial"
    C0 #C0
    gamma0 #gamma0
    S1 2.088
    S2 0
    S3 0
    G #Gbase
    Cv #CV
    rho #rho
    Hardening #hardID$
    if #hardID$="Linear"
      yield 42000
      Ep 0
    else if #hardID$="Nonlinear"
      yield 64.5
      Khard 190
      nhard 0.3
    else if #hardID$="JohnsonCook"
      Ajc 420
      Bjc 50
      Cjc 0
      njc 1
      mjc 3
      ep0jc 1
      Tmjc 393
    else
      Stop "Hardening = "&#hardID$&" not available for PMMA"
    endif
  Done
endif

! guess kinetic energy and add feedback damping
Comment "Displacement rate = "&(#disprate/1000)&" m/sec ("&#relRate&"% of wave speed)"
! velocity is linear form 0 to disprate in x
#ke = (1/6)*#rho*#disprate*#disprate*#length*#width*#thick/10^6
Comment "Base kinetic energy = "&(#ke/10^6)&" J"
if #fbdamp>0
  if #hold>0
    #Tk$ = #ke&"*(sign("&#time&"-t)+sign(t-"&((1+#hold)*#time)&"))"
  else
    #Tk$ = #ke
  endif
  FeedbackDamping #fbdamp,#Tk$
  GlobalArchive alpha
endif
if #pfbdamp>0
  if #hold>0
    #Tk$ = #ke&"*(sign("&#time&"-t)+sign(t-"&((1+#hold)*#time)&"))"
  else
    #Tk$ = #ke
  endif
  PFeedbackDamping #pfbdamp,#Tk$
  GlobalArchive palpha
endif
if #damp>0
  Damping #damp,#fractionPIC
  Comment "Grid damp tau = "&(2000/#damp)&" ms"
else if #fractionPIC>0
  Damping #damp,#fractionPIC
endif
if #pdamp>0
  PDamping #pdamp
  Comment "Particle damp tau = "&(2000/#pdamp)&" ms"
endif

! add rigid materials
! displacement functions for rigid materials
if #hold+#unload>0
  #rfxn$ = #disprate&"*(sign("&#time&"-t)-sign(t-"&((1+#hold)*#time)&"))"
else
  #rfxn$ = #disprate
endif
if #strain>0
  #rfxn$ = "-"&#rfxn$
endif
if #loading$="rigid"
  Material "rigid","Loading Clamp","Rigid"
    direction 1
    SettingFunction #rfxn$
    mirrored -1
  Done
else if #loading$="contact"
  Material "rigid","Loading Clamp","Rigid"
    direction 8
    SettingFunction #rfxn$
  Done
endif

! global archive
GlobalArchive sxx,#matID$
GlobalArchive syy,#matID$
GlobalArchive szz,#matID$
GlobalArchive exxe,#matID$
GlobalArchive "Strain Energy",#matID$
GlobalArchive "Kinetic Energy",#matID$
GlobalArchive "Plastic Energy",#matID$
GlobalArchive "Heat Energy",#matID$
if #loading$="contact"
  GlobalArchive "contactx"
  GlobalArchive "contacty"
  if #analysis$="3D MPM"
    GlobalArchive "contactz"
  endif
else if #loading$="rigid"
  GlobalArchive "reactionx","rigid"
endif
!GlobalArchive "reactionx",-11
GlobalArchiveTime (1+#hold+#unload)*#time/500

if #strain<0
  #gleft=-4*#cell
  #sides=(int(-#strain*#width/200/#cell)+4)
else
  #xtra=(int(#gridStrain*#length/100/#cell)+4)
  #gleft=-#xtra*#cell
  #sides=2
endif
#gright=#length+#cell
#gbot=-#sides*#cell
#gtop=#width+#sides*#cell
#zmin=-#sides*#cell
#zmax=#thick+#sides*#cell

! ********** Grid and Material Points Section **********
if #base$="symmetry"
  GridHoriz int((#gright-#gleft)/#cell+.5),#length,1
else
  GridHoriz int((#gright-#gleft)/#cell+.5)
endif
if #fixsides$="symmetry"
  GridVert int((#gtop-#gbot)/#cell+.5),0,-1,#width
else
  GridVert int((#gtop-#gbot)/#cell+.5)
endif
if #analysis$="3D MPM"
  if #fixsides$="symmetry"
    GridDepth int((#zmax-#zmin)/#cell+.5),0,-1,#thick
  else
    GridDepth int((#zmax-#zmin)/#cell+.5)
  endif
  GridRect #gleft,#gright,#gbot,#gtop,#zmin,#zmax
  
  ! material points
  Region #matID$,0,0,0
    Box 0,#length,0,#width,0,#thick
  EndRegion
else
  GridThickness #thick
  GridRect #gleft,#gright,#gbot,#gtop
  
  ! material points
  if 1=1
    Region #matID$,0,0,#thick
      Rect 0,#length,0,#width
    EndRegion
  else
    Repeat "#x",0,#length-#cell/4,#cell/2
      #velx=-#disprate*(#length-#x+#cell/4)/#length
      Region #matID$,#velx,0,#thick
        Rect #x,#x+#cell/2,0,#width
      EndRegion
    EndRepeat
  endif
endif

! ********** Boundary Condition Section **********

! loading conditions
#t1=#time
#t2=(1+#hold)*#time
ifStr #loading$="rigid"
  if #analysis$="3D MPM"
    Region "rigid",0,0,0
      Box -#cell,0,-#sides*#cell,#width+#sides*#cell,-#sides*#cell,#thick+#sides*#cell
    EndRegion
  else
    Region "rigid",0,0,#thick
      Rect -#cell,0,-#sides*#cell,#width+#sides*#cell
    EndRegion
  endif
  
else if #loading$="contact"
  if #analysis$="3D MPM"
    Region "rigid",0,0,0
      Box -2*#cell,0,-#sides*#cell,#width+#sides*#cell,-#sides*#cell,#thick+#sides*#cell
    EndRegion
  else
    Region "rigid",0,0,#thick
      Rect -2*#cell,0,-#sides*#cell,#width+#sides*#cell
    EndRegion
  endif
  
else ifStr #loading$="force"
  #forcerate=#stress*#width*#thick/#time		! total force rate on the end
  Comment "Stress rate = "&(#stress/#time)&" MPa/msec"
  if #hold+#unload>0
    #tpart$="*(t-(t-"&#t1&")*sign(t-"&#t1&")-(t-"&#t2&")*sign(t-"&#t2&"))"
  else
    #tpart$="*t"
  endif
  if #analysis$="3D MPM"
    LoadBox 0,0,0,#cell/2,#width,#thick
      LoadType net
      Load x,function,(-#forcerate)&#tpart$
    EndLoadBox
  else
    LoadRect 0,#cell/2,0,#width
      LoadType net
      if #hold+#unload>0
        Load x,function,(-#forcerate)&#tpart$
      else
        !Load x,constant,-#stress*#width*#thick
        Load x,linear,-#forcerate
        !Load x,sine,-#stress*#width*#thick,6*3.14159/#time
        !Load x,cosine,-#stress*#width*#thick,6*3.14159/#time
      endif
    EndLoadRect
  endif
  
else ifStr #loading$="traction"
  Comment "Stress rate = "&(#stress/#time)&" MPa/msec"
  if #hold+#unload>0
    #tpart$="*(t-(t-"&#t1&")*sign(t-"&#t1&")-(t-"&#t2&")*sign(t-"&#t2&"))"
  else
    #tpart$="*t"
  endif
  if #analysis$="3D MPM"
    LoadBox 0,0,0,#cell/2,#width,#thick
      Traction x,4,function,(-#stress/#time)&#tpart$
    EndLoadBox
  else
    if #hold+#unload>0
      LoadRect 0,#cell/2,0,#width
        Traction x,4,function,(-#stress/#time)&#tpart$
      EndLoadRect
    else
      LoadRect 0,#cell/2,0,#width
         !Traction x,4,Constant,-#stress
         Traction x,4,linear,(-#stress/#time)
         !Traction x,4,sine,-#stress,6*3.14159286/#time
         !Traction x,4,cosine,-#stress,6*3.14159286/#time
       EndLoadRect
    endif
  endif
  
else ifStr #loading$="thermal"
  ThermalRamp #deltaT,#time
  
else ifStr #loading$="grid"
  Comment "Displacement rate = "&(-#disprate)&" mm/sec"
  if #hold+#unload>0
    #tpart$="*(1-sign(t-"&#t1&")-sign(t-"&#t2&"))"
  else
    #tpart$=""
  endif
  if #analysis$="3D MPM"
    MoveBox -4*#cell,0,0,#cell/10,#width,#thick
      Velocity x,function,(-#disprate)&#tpart$
    EndMoveBox
  else
    MoveLine -2*#cell,0,-2*#cell,#width,2.01*#cell
      if #hold+#unload>0
        Velocity x,function,(-#disprate)&#tpart$
      else
        Velocity x,constant,-#disprate
        !Velocity x,linear,-2*#disprate/#time
        !Velocity x,sine,-#disprate,6*3.14159286/#time
        !Velocity x,cosine,-#disprate,6*3.14159286/#time
      endif
    EndMoveLine
  endif
  
endif

! to superpose Delta T on other conditions
!ThermalRamp 1000,(1+#hold+#unload)*#time
!ToArchive Temperature

! Fixed bottom
! set to #length + #cell/2 to only two rows for cells for GIMP
if #base$!="symmetry"
  BoundaryID -11
  if #analysis$="3D MPM"
    if #base$="BC1"
      #bcell=#cell/2
    else
      #bcell=#cell
    endif
    MoveBox #length,-#sides*#cell,-#sides*#cell,#length+#bcell,#width+#sides*#cell,#thick+#sides*#cell
      Velocity x,constant,0
    EndMoveBox
  else
    if #base$="BC1"
      #midpt=#length
    else
      #midpt=#length+#cell/2
    endif
    MoveLine #midpt,-#sides*#cell,#midpt,#width+#sides*#cell,0.55*#cell
      Velocity x,constant,0
    EndMoveLine
  endif
  BoundaryID
endif

! Fixed sides
#isFixed$="no"
if #fixsides$="BC1"
  #isFixed$="yes"
else if #fixsides$="BC2"
  #isFixed$="yes"
endif
if #isFixed$="yes"
  if #fixsides$="BC1"
    #bcell=#cell/2
  else
    #bcell=#cell
  endif
  if #analysis$="3D MPM"
    MoveBox #gleft,-#bcell,#zmin,#gright,0.1*#cell,#zmax
      Velocity y,constant,0
    EndMoveBox
    MoveBox #gleft,#width,#zmin,#gright,#width+#bcell,#zmax
      Velocity y,constant,0
    EndMoveBox
    MoveBox #gleft,#gbot,-#bcell,#gright,#gtop,0.1*#cell
      Velocity z,constant,0
    EndMoveBox
    MoveBox #gleft,#gbot,#thick,#gright,#gtop,#thick+#bcell
      Velocity z,constant,0
    EndMoveBox
  else
    if #fixsides$="BC2"
      #midpt1=-#cell/2
      #midpt2=#width+#cell/2
    else
      #midpt1=0
      #midpt2=#width
    endif
    MoveLine #gleft,#midpt1,#gright,#midpt1,0.55*#cell
      Velocity y,constant,0
    EndMoveLine
    MoveLine #gleft,#midpt2,#gright,#midpt2,0.55*#cell
      Velocity y,constant,0
    EndMoveLine
  endif
endif

! need to change BC to linear force, tractions, or rigid particles and constant velocity
!CustomTask "ReverseLoad"
!Parameter style,"reverse"
!Parameter "quantity","sxx"
!Parameter "material",#matID$
!Parameter "hold",.5
!Parameter "maxValue",3

CustomTask VTKArchive
Parameter strainenergy
Parameter heatenergy
Parameter plasticenergy