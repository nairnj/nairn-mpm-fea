! ********** Preamble Section **********
! This command file does pure shear loading of hyperelastic material.
! The loading by rigid particle surrrounding the object to provide pure shear displacement
!    on the boundaries
! Calculations can be 2D or 3D.
! 2D uses separate (but identical materials) for cells in middle and cells next to the
!    rigid particles. The middles ones are closer to pure shear. This option is not
!    yet done in 3D
Title "Pure and Simple Shear Loading"Name "John Nairn"

! HeaderHeaderPure shear loading on a hyperelastic material
EndHeader! ------------ Parameters ---------------

! Analysis type: "Plane Strain MPM", "Plane Stress MPM", or "3D MPM"
#analysis="Plane Strain MPM"

! Points per element
#ppe=2
XMLData MPMHeader
    <DefGradTerms>2</DefGradTerms>
EndXMLData

! pick a method usually "lCPDI" or "uGIMP"
#method="lCPDI"

! pick strain update method usually "USF" or "USAVG"
#update="USF"

! Supported materials: "neohookean" (G2=0), "mooney" (G1=G2), heiso
#matID="heiso"

! Basic properties
#Ebase=1000
#rho=1
#nuBase=.35
#aBase=60
#yldstrain=100
#hardID="Linear"
#Ep=0

! Dimensions (best to keep cube)
#cell=10
#length=10				! length
#width=#length			! width
#thick=#length			! thickness

! Total shear strain (estimated for traction loads)
#strain=100

! "rigid" or "biaxialdisp" or "biaxialtraction" or "sheartraction"
! In biaxial ones, tau = (#sxx-#syy)/2, sigmax = (#sxx+#syy)/2 + #sxy,
!     sigmay = (#sxx+#syy)/2 - #sxy, gamma = #eyy-#exx
! "rigid" + simple="yes" for simple shear, top and bottom displacements only
#bcs="rigid"
#simple="yes"
#edgematerial="no"

! Loading rate
#tmult=1000			! number of transit times to load peak

! Damping parameter - for feedback or grid
#damp=0
#fbdamp=0
#factor=0.1			! time step factor

! ------------ Calculations ---------------

! Analysis type
Analysis #analysis
MPMMethod #update,#method
PtsPerElement #ppe

! get material properties
#G1=#Ebase/(2*(1+#nuBase))
#G2=0
if #matID="mooney"
  #G1=#G1/2
  #G2=#G1
endif
#Kbulk=#Ebase/(3*(1-2*#nuBase))
#G0=#G1+#G2

! get isotropic wave speed, or change if needed
#speed=1000*sqrt(1000*(#Kbulk+4*#G0/3)/#rho)

! time to finish
#transit=1000*#length/#speed			! transit time in ms
#time=#tmult*#transit					! time to peak load in ms using tmult

if #bcs!="rigid"
  if #analysis="3D MPM"
    stop "Biaxial loading methods only allowed in 2D calculations."
  endif
  #strain/=2
endif
#disp=#strain*#width/200				! mm of displacement
#disprate=1000*#disp/#time			    ! displacement rate mm/s using tmult

if #bcs="rigid"
  Comment "Top and bottom displacement = +/-"&abs(#disp)&" mm for shear strain of "&#strain&"%"
  Comment "Top and bottom displacement rate = "&(#disprate/1000)&" m/sec"
else
  Comment "Uniaxial displacement = +/-"&abs(#disp)&" mm for shear strain of "&(2*#strain)&"%"
  Comment "Uniaxial displacement rate = "&(#disprate/1000)&" m/sec"
endif
! Archiving
Archive "Results/Shear/"&#analysis&" "&#method&"/"&#matID
TimeStep 1000,#time,#factor
MaximumTime #time
ArchiveTime #time/50
ToArchive velocity,stress,strain,strainenergy,rotStrain,plasticstrain,history1,history2

! ********** Materials Section **********

if #matID="neohookean"
  Material #matID,"Neohookean Material","Mooney"
    G1 #G1
    G2 #G2
    K #Kbulk
    a #aBase
    rho #rho
  Done
  Material #matID&"-#edge","Neohookean Material Edge","Mooney"
    G1 #G1
    G2 #G2
    K #Kbulk
    a #aBase
    rho #rho
  Done
endif

if #matID="mooney"
  Material #matID,"Mooney-Rivlin Material","Mooney"
    G1 #G1
    G2 #G2
    K #Kbulk
    a #aBase
    rho #rho
  Done
  Material #matID&"-#edge","Mooney-Rivlin Material Edge","Mooney"
    G1 #G1
    G2 #G2
    K #Kbulk
    a #aBase
    rho #rho
  Done
endif

if #matID="heiso"
  Material #matID,"HE Isotropic Plastic","HEIsotropic"
    G1 #G1
    !G2 #G2
    K #Kbulk
    a #aBase
    rho #rho
    hardening #hardID
    if #hardID="Linear"
      yield abs(#Ebase*#yldstrain/100)
      Ep #Ep
    endif
    UJOption 0
    kCond .202
    CP 1256
  Done
  Material #matID&"-#edge","HE Isotropic Plastic","HEIsotropic"
    G1 #G1
    !G2 #G2
    K #Kbulk
    a #aBase
    rho #rho
    hardening #hardID
    if #hardID="Linear"
      yield abs(#Ebase*#yldstrain/100)
      Ep #Ep
    endif
    UJOption 0
    kCond .202
    CP 1256
  Done
endif

! displacement functions for rigid materials
if #bcs="rigid"
  !#rfxn=(2*#disprate/#width)&"*(y-"&(#width/2)&")"
  #rfxn=(2*#disprate/#width)&"*(sign(y)*"&(#width/2)&"-sign(-y)*"&(#width/2)&")"

  ! define rigid materials
  Material "rigid","Loading Clamp","Rigid"
    if #analysis="3D MPM"
      direction 7
    else if #simple="no"
      direction 3
    else
      direction 3
    endif
    SettingFunction #rfxn
    SettingFunction2 0
    if #analysis="3D MPM"
      SettingFunction3 0
    endif
  Done

else if #bcs="biaxialdisp"
  Material "rigidH","Horizontal Loading Clamp","Rigid"
    direction 1
  Done
  Material "rigidV","Vertical Loading Clamp","Rigid"
    direction 2
  Done
endif

! guess kinetic energy and add feedback damping
! velocity is linear form 0 to disprate in x
#ke = (1/6)*#rho*#disprate*#disprate*#length*#width*#thick/10^6
Comment "Base kinetic energy = "&(#ke/10^6)&" J"
if #fbdamp>0
  FeedbackDamping #fbdamp,#ke
  GlobalArchive alpha
endif
if #damp>0
  Damping #damp
endif

! global archive
GlobalArchive sxx,#matID
GlobalArchive syy,#matID
GlobalArchive szz,#matID
GlobalArchive sxy,#matID
GlobalArchive exye,#matID
GlobalArchive "Strain Energy",#matID
GlobalArchive "Kinetic Energy",#matID
GlobalArchiveTime #time/100

#sides=2
#xtra=int(1.3*abs(#disp)/#cell+.5)
#gleft=-(#xtra+#sides)*#cell
#gright=#length+(#xtra+#sides)*#cell
if #bcs="sheartraction"
  #gbot=-(#xtra+#sides)*#cell
  #gtop=#width+(#xtra+#sides)*#cell
else
  #gbot=-#sides*#cell
  #gtop=#width+#sides*#cell
endif
#gzmin=-#sides*#cell
#gzmax=#thick+#sides*#cell

! ********** Grid and Material Points Section **********
GridHoriz int((#gright-#gleft)/#cell+.5)
GridVert int((#gtop-#gbot)/#cell+.5)
if #analysis="3D MPM"
  GridDepth int((#gzmax-#gzmin)/#cell+.5)
  GridRect #gleft,#gright,#gbot,#gtop,#gzmin,#gzmax
  
  ! material points
  Region #matID,0,0,0,"angle",#angle
    Box 0,#length,0,#width,0,#thick
  EndRegion
  
  Region "rigid",0,0,0
    Box -#cell,#length+#cell,-#cell,#width+#cell,-#cell,#thick+#cell
  EndRegion
else
  GridThickness #thick
  GridRect #gleft,#gright,#gbot,#gtop
  
  ! material points
  if #bcs="rigid"
    Region "rigid",0,0,#thick
      Rect -2*#cell,#width+3*#cell,-#cell,0
      Rect -3*#cell,#width+2*#cell,#width,#width+#cell
      if #simple="no"
        Rect -#cell,0,-#cell,#width+#cell
        Rect #length,#length+#cell,-#cell,#width+#cell
      endif
    EndRegion
  else if #bcs="biaxialdisp"
    Region "rigidV",0,#disprate,#thick
      Rect #gleft-#cell,#gright+#cell,-2*#cell,0
    EndRegion
    Region "rigidV",0,-#disprate,#thick
      Rect #gleft-#cell,#gright+#cell,#width,#width+2*#cell
    EndRegion
    Region "rigidH",-#disprate,0,#thick
      Rect -2*#cell,0,0,#width
    EndRegion
    Region "rigidH",#disprate,0,#thick
      Rect #length,#length+2*#cell,0,#width
    EndRegion
  else if #bcs="biaxialtraction"
    #Gle=#Ebase/(2*(1+#nuBase))
    #stressrate=#Gle*2*#strain/(100*#time)
    LoadLine 0,0,#length,0,#cell/2
      Traction y,1,linear,#stressrate
    EndLoadLine
    LoadLine 0,#width,#length,#width,#cell/2
      Traction y,3,linear,-#stressrate
    EndLoadLine
    LoadLine 0,0,0,#width,#cell/2
      Traction x,4,linear,-#stressrate
    EndLoadLine
    LoadLine #length,0,#length,#width,#cell/2
      Traction x,2,linear,#stressrate
    EndLoadLine
  else if #bcs="sheartraction"
    #Gle=#Ebase/(2*(1+#nuBase))
    #stressrate=#Gle*2*#strain/(100*#time)
    LoadLine 0,0,#length,0,#cell/2
      Traction shear,1,linear,-#stressrate
    EndLoadLine
    LoadLine 0,#width,#length,#width,#cell/2
      Traction shear,3,linear,-#stressrate
    EndLoadLine
    LoadLine 0,0,0,#width,#cell/2
      Traction shear,4,linear,#stressrate
    EndLoadLine
    LoadLine #length,0,#length,#width,#cell/2
      Traction shear,2,linear,#stressrate
    EndLoadLine
  endif
  if #edgematerial="yes"
    Region #matID,0,0,#thick
      Rect 2*#cell,#length-2*#cell,2*#cell,#width-2*#cell
    EndRegion
    Region #matID&"-#edge",0,0,#thick
      Rect 0,#length,0,#width
    EndRegion
  else
    Region #matID,0,0,#thick
      Rect 0,#length,0,#width
    EndRegion
  endif
endif

