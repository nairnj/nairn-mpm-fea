! ********** Preamble Section **********
Title "Low Strain Tensile Loading"Name "John Nairn"

! HeaderHeaderSimple tensile loading on a low-strain, hypoelastic materials
2D or 3D uniaxial loading by various boundary conditions
Sides can be free or constrained
Intended for development of low strain materials
EndHeader! ------------ Parameters ---------------

! Analysis type: "Plane Strain MPM", "Plane Stress MPM", or "3D MPM"
#analysis="Plane Strain MPM"

! pick a method usually "lCPDI" or "uGIMP"
#method="uGIMP"

! pick strain update method usually "USF" or "USAVG"
#update="USF"

! material options: isotropic, vonmises, bistable, iptrans, normtrans, ortho
!   viscoelastic, hill, johnson, wood, MGSCGL, SL
#matID="isotropic"
#angle=0					! material angle for anisotopic materials

! temperature option to test energy coupling
StressFreeTemp 294
#startTemp=294
!Conduction "yes","Mechanical Energy"

! Basic properties (but this do not work for XML materials)
#Ebase=1000
#rho=1
#nuBase=.25
#aBase=60
#yldstrain=1		! in percent

! Dimensions
#cell=2
#length=40			! length (transit time = 1 ms)
#width=10			! width
#thick=10			! thickness

! Load by strain (estimated for force and traction loads)
#loading="traction"	! Loading = "force", "traction", "rigid", "contact"
#fixsides="yes"		! "yes" or "no" for sides fix in y direction (2D) or y and z (3D)
#strain=5	        ! Maximum strain (%) (stress needed is estimated for force and tractions use base modulus)

! Loading rate
#tmult=10			! number of transit times to load peak
#hold=0				! hold time (multiple of loading time)
#unload=0		    ! 0 no unload or >0 for unloading time (multiple of loading time, but at same loading rate)

! Damping parameter - for feedback or regular, depending on BCs
#damp=0
#fbdamp=0.0
#factor=0.1			! time step factor

! ------------ Calculations ---------------

! Analysis type
Analysis #analysis
MPMMethod #update,#method

! convert to contact
if #loading="contact"
  if #strain>0
    Stop "'contact' mode only for compress (could try tension with imperfect interface contact)"
  endif
  MultimaterialMode 0,enabled,maxgrad,10
  FrictionMM 0
endif

! estimate stress by simple tension
if #fixsides="no"
  #stress=#Ebase*#strain/100
else
  #Kbulk=#Ebase/(2*(1-#nuBase))
  #stress=#Kbulk*#strain/100
endif

! calculate time to reach peak state
#speed=1000*sqrt(#Ebase*1000/#rho)		! elastic wave speed in mm/s
#transit=1000*#length/#speed			! transit time in ms
#time=#tmult*#transit					! time to peak load in ms using tmult
#disp=#strain*#length/100				! mm of displacement
#disprate=1000*#disp/#time			    ! displacement rate mm/s using tmult
! Archiving
if #fixsides="yes"
  Archive "Results/ConstrainedTension/"&#analysis&" "&#method&"/"&#loading&"/"&#matID
else
  Archive "Results/Tension/"&#analysis&" "&#method&"/"&#loading&"/"&#matID
endif
TimeStep 1000,(1+#hold+#unload)*#time,#factor
ArchiveTime (1+#hold+#unload)*#time/50
ToArchive velocity,stress,strain,strainenergy,elementcrossings,rotStrain
#isPlastic="no"
if #matID="vonmises"
  #isPlastic="yes"
else if #matID="johnson"
  #isPlastic="yes"
else if #matID="hill"
  #isPlastic="yes"
else if #matID="wood"
  #isPlastic="yes"
else if #matID="MGSCGL"
  #isPlastic="yes"
else if #matID="SL"
  #isPlastic="yes"
endif
if #isPlastic="yes"
  ToArchive plasticstrain,plasticenergy,history1,temperature
endif
if #matID="bistable"
  ToArchive history1
endif

! ********** Materials Section **********

if #matID="isotropic"
  Material "isotropic","Isotropic Material","Isotropic"
    E #Ebase
    nu #nuBase
    a #aBase
    rho #rho
  Done
endif

if #matID="vonmises"
  Material "vonmises","Elastic Plastic Material","VonMises"
    E #Ebase
    nu #nuBase
    a #aBase
    rho #rho
    ET #Ebase/8
    !  ET 0
    yield abs(#Ebase*#yldstrain/100)
    !nhard .24
    !Khard 5300
    kCond .00202
    CP .1256
  Done
endif

if #matID="johnson"
  Material #matID,"Copper Johnson Cook","johnsoncook"
    rho 8.96
    Cp 383
    E 120000
    nu .25
    alpha 0
    kCond 0.202
    Ajc 90
    Bjc 292
    njc .31
    Cjc 0.025
    ep0jc 1
    Tmjc 1356
    mjc 1.09
  Done
endif

if #matID="MGSCGL"
  Material "MGSCGL","Tungsten","MGSCGLMaterial"
    C0 4004
    S1 1.35
    S2 0
    gamma0 1.64
    rho 19.256
    yield 2200
    G 160000
    Cv 134
	GPpG0 0.01e-3
	GTpG0 -2.2e-4
    yieldMax 4000
    betahard 7.7
    nhard 0.13
  Done
endif

if #matID="SL"
  Material #matID,"Tungsten","SLMaterial"
    C0 4004
    S1 1.35
    S2 0
    gamma0 1.64
    rho 19.256
    yield 2200
    G 160000
    Cv 134
	GPpG0 0.01e-3
	GTpG0 -2.2e-4
    yieldMax 4000
    betahard 7.7
    nhard 0.13
	YP 1000
	Uk 0.31
	C1 710000
	C2 0.012
  Done
endif

if #matID="viscoelastic"
  Material "viscoelastic","Viscoelastic Material","Viscoelastic"
    K #Ebase/(3*(1-2*#nuBase))
    G0 #Ebase/(4*(1+#nuBase))
    Gk #Ebase/(4*(1+#nuBase))
    tauk 20*#transit/1000
    a #aBase
    rho #rho
  Done
endif

if #matID="bistable"
  Material "bistable","Two State Material","Bistable"
    K0 #Ebase/(3*(1-2*#nuBase))
    G0 #Ebase/(2*(1+#nuBase))
    a0 #aBase
    Kd #Ebase/(3*(1-2*#nuBase))/5
    Gd #Ebase/(2*(1+#nuBase))/5
    DeltaVOffset -3
    critical #strain/4
    transition dilation
    reversible yes
    rho #rho
  Done
endif

if #matID="normtrans"
  Material "normtrans","In-Plane Isotropic Material",2
    ET #Ebase
    EA 10*#Ebase
    nuA .2
    nuT .33
    GA #Ebase/5
    aA 20
    aT 60
    rho #rho
  Done
endif

if #matID="iptrans"
  Material "iptrans","Transversely Isotropic Material",3
    ET #Ebase
    EA #Ebase/5
    nuA .1
    nuT #nuBase
    GA #Ebase/5
    aA #aBase/5
    aT #aBase
    rho #rho
  Done
endif

if #matID="ortho"
  Material "ortho","Orthotropic Material",4
    Ex #Ebase
    Ey #Ebase/10
    Ez #Ebase/5
    nuxy .25
    nuxz .25
    nuyz .35
    Gxy #Ebase/5
    Gxz #Ebase/5
    Gyz #Ebase/10
    ax 20
    ay 40
    az 60
    rho #rho
  Done
endif

if #matID="hill"
  Material "hill","Orthotropic Hill Plastic",15
    Ex #Ebase
    Ey #Ebase
    Ez #Ebase
    nuxy .33
    nuxz .33
    nuyz .33
    Gxy #Ebase/(2*1.33)
    Gxz #Ebase/(2*1.33)
    Gyz #Ebase/(2*1.33)
    ax 60
    ay 60
    az 60
    rho #rho
    yldxx abs(#Ebase*#yldstrain/100)
    yldyy abs(#Ebase*#yldstrain/100)
    yldzz abs(#Ebase*#yldstrain/100)
    yldxy abs(#Ebase*#yldstrain/100/sqrt(3))
    Khard 5
    nhard 2
  Done
endif

if #matID="wood"
  XMLData Material,"wood"
  <Material Type="19" Name="Orthotropic Wood Material">
    <rho>10</rho>
    <yldxx>0.5</yldxx>
    <yldyy>0.5</yldyy>
    <yldzz>0.5</yldzz>
    <yldxy>0.288675135</yldxy>
    <Khard>5</Khard>
    <nhard>2</nhard>
    <Ex>100</Ex>
    <Ey>100</Ey>
    <Ez>100</Ez>
    <Gxy>37.593984962</Gxy>
    <Gxz>37.593984962</Gxz>
    <Gyz>37.593984962</Gyz>
    <nuxy>0.33</nuxy>
    <nuxz>0.33</nuxz>
    <nuyz>0.33</nuyz>
    <alphax>60</alphax>
    <alphay>60</alphay>
    <alphaz>60</alphaz>
    <betax>0</betax>
    <betay>0</betay>
    <betaz>0</betaz>
    <kCondx>0</kCondx>
    <kCondy>0</kCondy>
    <kCondz>0</kCondz>
    <Dx>0</Dx>
    <Dy>0</Dy>
    <Dz>0</Dz>
    <tempC1>104.31</tempC1>
    <tempC2>-.1994</tempC2>
  </Material>
  EndXMLData
endif

! displacement functions for rigidd materials
#rfxn = -#disprate&"*(sign("&#time&"-t)-sign(t-"&((1+#hold)*#time)&"))"

! add rigid materials and set damping
#ke=0
if #loading="rigid"
  Material "rigid","Loading Clamp","Rigid"
    direction 1
    SettingFunction #rfxn
  Done
  Comment "Displacement rate = "&(#disprate/1000)&" m/sec"
  #ke = (1/6)*#rho*#disprate*#disprate*#length*#width*#thick/10^6
  Comment "Base kinetic energy = "&(#ke/10^6)&" J"
else if #loading="contact"
  Material "rigid","Loading Clamp","Rigid"
    direction 8
    SettingFunction #rfxn
  Done
endif
if #fbdamp>0
  FeedbackDamping #fbdamp,#ke
  GlobalArchive alpha
  GlobalArchive "Kinetic Energy"
endif
if #damp>0
  Damping #damp
endif

! global archive
GlobalArchive sxx,#matID
GlobalArchive syy,#matID
GlobalArchive szz,#matID
GlobalArchive exx,#matID
GlobalArchive "Strain Energy",#matID
if #isPlastic="yes"
  GlobalArchive exxe,#matID
  GlobalArchive exxp,#matID
  GlobalArchive eyye,#matID
  GlobalArchive eyyp,#matID
  GlobalArchive ezze,#matID
  GlobalArchive ezzp,#matID
  GlobalArchive "Plastic Energy",#matID
endif
if #loading="contact"
  GlobalArchive "contactx"
  GlobalArchive "contacty"
endif
GlobalArchiveTime (1+#hold+#unload)*#time/100

if #strain<0
  #gleft=-4*#cell
  #sides=(int(-#strain*#width/200/#cell)+4)
else
  #xtra=(int(1.6*#strain*#length/100/#cell)+4)
  #gleft=-#xtra*#cell
  #sides=4
endif
#gright=#length+#cell
#gbot=-#sides*#cell
#gtop=#width+#sides*#cell
#zmin=-#sides*#cell
#zmax=#thick+#sides*#cell

! ********** Grid and Material Points Section **********
GridHoriz int((#gright-#gleft)/#cell+.5)
GridVert int((#gtop-#gbot)/#cell+.5)
if #analysis="3D MPM"
  GridDepth int((#zmax-#zmin)/#cell+.5)
  GridRect #gleft,#gright,#gbot,#gtop,#zmin,#zmax
  
  ! material points
  Region #matID,0,0,0,"angle",#angle,"temp",#startTemp
    Box 0,#length,0,#width,0,#thick
  EndRegion
else
  GridThickness #thick
  GridRect #gleft,#gright,#gbot,#gtop
  
  ! material points
  Region #matID,0,0,#thick,"angle",#angle,"temp",#startTemp
    Rect 0,#length,0,#width
  EndRegion
endif

! ********** Boundary Condition Section **********

! loading conditions
! rigid or contact - loading be function calculated above
! force - load until #stress in #time and then hold
! traction - load until #stress in #time and then hold
#t1=#time
#t2=(1+#hold)*#time
ifStr #loading="rigid"
  if #analysis="3D MPM"
    Region "rigid",1,0,0
      Box -#cell,0,-#sides*#cell,#width+#sides*#cell,-#sides*#cell,#thick+#sides*#cell
    EndRegion
  else
    Region "rigid",1,0,#thick
      Rect -#cell,0,-#sides*#cell,#width+#sides*#cell
    EndRegion
  endif
else if #loading="contact"
  if #analysis="3D MPM"
    Region "rigid",1,0,0
      Box -#cell,0,-#sides*#cell,#width+#sides*#cell,-#sides*#cell,#thick+#sides*#cell
    EndRegion
  else
    Region "rigid",1,0,#thick
      Rect -#cell,0,-#sides*#cell,#width+#sides*#cell
    EndRegion
  endif
else ifStr #loading="force"
  #forcerate=#stress*#width*#thick/#time		! total force rate on the end
  Comment "Stress rate = "&(#stress/#time)&" MPa/msec"
  if #hold+#unload>0
    #tpart="*(t-(t-"&#t1&")*sign(t-"&#t1&")-(t-"&#t2&")*sign(t-"&#t2&"))"
  else
    #tpart="*t"
  endif
  if #analysis="3D MPM"
    LoadBox 0,0,0,#cell/2,#width,#thick
      LoadType net
      Load x,function,(-#forcerate)&#tpart,0,-1
    EndLoadBox
  else
    LoadRect 0,#cell/2,0,#width
      LoadType net
      Load x,function,(-#forcerate)&#tpart,0,-1
    EndLoadRect
  endif
else ifStr #loading="traction"
  Comment "Stress rate = "&(#stress/#time)&" MPa/msec"
  if #hold+#unload>0
    #tpart="*(t-(t-"&#t1&")*sign(t-"&#t1&")-(t-"&#t2&")*sign(t-"&#t2&"))"
  else
    #tpart="*t"
  endif
  if #analysis="3D MPM"
    LoadBox 0,0,0,#cell/2,#width,#thick
      Traction x,4,function,(-#stress/#time)&#tpart,0,-1
    EndLoadBox
  else
    LoadRect 0,#cell/2,0,#width
      Traction x,4,function,(-#stress/#time)&#tpart,0,-1
    EndLoadRect
  endif
endif

! Fixed bottom! set to #length + #cell/2 to only two rows for cells for GIMP
if #analysis="3D MPM"
  MoveBox #length,-#sides*#cell,-#sides*#cell,#length+#cell,#width+#sides*#cell,#thick+#sides*#cell
    Velocity x,constant,0
  EndMoveBox
else
  #midpt=#length+#cell/2
  MoveLine #midpt,-#sides*#cell,#midpt,#width+#sides*#cell,#cell
    Velocity x,constant,0
  EndMoveLine
endif

! Fixed sides
if #fixsides="yes"
  if #analysis="3D MPM"
    Stop "fixed sides not implemented for 3D yet"
  else
    #midpt=-#cell/2
    MoveLine #gleft,#midpt,#gright,#midpt,#cell
      Velocity y,constant,0
    EndMoveLine
    #midpt=#width+#cell/2
    MoveLine #gleft,#midpt,#gright,#midpt,#cell
      Velocity y,constant,0
    EndMoveLine
  endif
endif

! 3D Archived
if #analysis="3D MPM"
  XMLData

  <CustomTasks>
    <Schedule name='VTKArchive'>
      <Parameter name='mass'/>
      <Parameter name='stress'/>
      <Parameter name='strain'/>
      <Parameter name='velocity'/>
      <Parameter name='plasticstrain'/>
      <Parameter name='displacement'/>
      <Parameter name='strainenergy'/>
      <Parameter name='plasticenergy'/>
    </Schedule>
  </CustomTasks>

  EndXMLData
endif