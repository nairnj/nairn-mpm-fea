! ********** Preamble Section **********
! This command file does uniaxial loading of hyperelastic material.
! The loading is the the x direction and can be tension or compression (using + or - #strain variable).
! The right edge of the specimen if fixed, the loaded edge can be loading by rigid particles,
!    contact rigid particles, particle forces, or particle tractions.
! The sides can be fixed (for contrained loading and simpler deformation state) or be free
!    for simple tensile test.
! Calculations can be 2D or 3D.
Title "Hyperelasstic Tensile Loading"Name "John Nairn"

! Header/NotesHeaderUniaxial loading in the x direction on a hyperelastic material
EndHeader! ------------ Parameters ---------------

! Analysis type: "Plane Strain MPM", "Plane Stress MPM", or "3D MPM"#analysis="Plane Strain MPM"
Processors 1
XMLData "Header"
    <DevelFlag Number='3'>010201</DevelFlag>
EndXMLData

! Points per element
#ppe=2
XMLData MPMHeader
    <DefGradTerms>2</DefGradTerms>
EndXMLData

! pick a method usually "lCPDI" or "uGIMP"
#method="lCPDI"

! pick strain update method usually "USF" or "USAVG"
#update="USAVG"

! Supported materials: "neohookean" (G2=0), "mooney" (G1=G2), heiso
#matID="neohookean"

! hardening law (if allowed) for current material
!	options Linear, Nonlinear, Nonlinear2
#hardID="Linear"

! temperature option to test energy coupling
StressFreeTemp 294
#startTemp=294

! Basic properties
#Ebase=100
#rho=1.2
#nuBase=.3
#aBase=60
#yldstrain=10		! in percent

! Dimensions
#cell=.5
#length=1			! length
#width=1			! width
#thick=1			! thickness

! Load by stress or by velocity (if stress<=0)
#loading="rigid"	! Loading = "rigid", "force", "traction", thermal, "contact"

! "symmetry" to constrain y direction (and z direction if 3D), "No" for no contraint
! "BC1" or "BC2" to use one or two layers of BCs instead of symmetry planes
! #base can be "symmetry" for symmetry plane, "BC1" for 1 layer or "BC2" for two layers
#fixsides="no"
#base="symmetry"	

! test settings
#gridStrain=1200		! room in grid (ignored if #strain<0)
#strain=800	        ! Maximum strain (%) (stress needed is estimated for force and tractions), or dT for thermal
#relRate=10			! Displacement rate as percent of wave speed of material (if >0)
#tmult=30			! Load in this number of transit times (if #relRate<0)
#factor=0.05			! time step factor

! Loading rate
#hold=0				! hold time (multiple of loading time)
#unload=0		    ! 0 no unload or >0 for unloading time (multiple of loading time, but at same loading rate)

! Damping parameter - for feedback or grid damping
#damp=0
#fbdamp=0.0

! ------------ Calculations ---------------

! Analysis type
Analysis #analysis
MPMMethod #update,#method
PtsPerElement #ppe
conduction "yes","isothermal"

! convert to contact
if #loading="contact"
  MultimaterialMode 0,enabled,maxgrad,100
  ImperfectInterfaceMM 0,1e15
  XMLData,"Header"
    <DevelFlag Number='0'>3</DevelFlag>
    <DevelFlag Number='1'>-1</DevelFlag>
  EndXMLData
endif

! base line calculations
#G1=#Ebase/(2*(1+#nuBase))
#G2=0
#Kbulk=#Ebase/(3*(1-2*#nuBase))
if #matID="mooney"
  #G1=#G1/2
  #G2=#G1
endif
#G0=#G1+#G2

! estimate stress to reach strain (only used if force or tractions)
if #fixsides!="symmetry"
  #stress=#Ebase*#strain/100
else
  #stress=#Kbulk*#strain/100
endif

! calculate time to reach peak state
#speed=1000*sqrt(1000*(#Kbulk+4*#G0/3)/#rho)	! wave speed (mm/sec)

#disp=#strain*#length/100				! mm of displacement to get to strain
if #relRate>0
  #disprate=#relRate*#speed/100			! dispacement rate (mm/sec)
  #time=1000*#disp/#disprate			! time to peak load in ms
else
  #transit=1000*#length/#speed			! transit time in ms
  #time=#tmult*#transit					! time to peak load in ms using tmult
  #disprate=1000*#disp/#time			! displacement rate mm/sec using tmult
  #relRate=100*#dispRate/#speed
endif

if #loading="thermal"
  #deltaT=#strain
  #strain=0
  #stress=0
  #disp=0
  #disprate=0
endif
! Archiving
if #fixsides="symmetry"
  Archive "Results/HEConstrainedTension/"&#analysis&"-"&#method&"-"&#update&"/"&#loading&"/"&#matID
else
  Archive "Results/HETension/"&#analysis&"-"&#method&"-"&#update&"/"&#loading&"/"&#matID
endif
TimeStep 1000,(1+#hold+#unload)*#time,#factor
!MaximumTime (1+#hold+#unload)*#time
ArchiveTime (1+#hold+#unload)*#time/50
ToArchive velocity,stress,strain,strainenergy,elementcrossings,rotStrain
! plastic strain is Left Cauchy Green Strain, history 2 is J or volumetric strain (except some hardening laws)
ToArchive plasticstrain,history1,history2,plasticenergy,temperature
Comment "Load time = "&#time&" ms"
Comment "Hold time = "&#hold&" ms"

! ********** Materials Section **********

if #matID="neohookean"
  Material #matID,"Neohookean Material","Mooney"
    G1 #G1
    G2 #G2
    K #Kbulk
    a #aBase
    rho #rho
    kCond .202
    CP 1256
    !ArtificialVisc on
    !IdealRubber 1
  Done
endif

if #matID="mooney"
  Material #matID,"Mooney-Rivlin Material","Mooney"
    G1 #G1
    G2 #G2
    K #Kbulk
    a #aBase
    rho #rho
    kCond .202
    CP 1256
  Done
endif

if #matID="heiso"
  Material #matID,"HE Isotropic Plastic","HEIsotropic"
    G1 #G1
    !G2 #G2
    K #Kbulk
    a #aBase
    rho #rho
    hardening #hardID
    if #hardID="Linear"
      yield abs(#Ebase*#yldstrain/100)
      Ep #Ebase/10
    else if #hardID="Nonlinear"
      yield 65
      Khard 100
      nhard .1
    else if #hardID="Nonlinear2"
      yield 40
      Khard 2
      nhard .2
    endif
    UJOption 0
    kCond .202
    CP 1256
  Done
endif

! guess kinetic energy and add feedback damping
Comment "Displacement rate = "&(#disprate/1000)&" m/sec ("&#relRate&"% of wave speed)"
! velocity is linear form 0 to disprate in x
#ke = (1/6)*#rho*#disprate*#disprate*#length*#width*#thick/10^6
Comment "Base kinetic energy = "&(#ke/10^6)&" J"
if #fbdamp>0
  FeedbackDamping #fbdamp,#ke
  GlobalArchive alpha
endif
if #damp>0
  Damping #damp
endif

! add rigid materials
! displacement functions for rigid materials
if #hold+#unload>0
  #rfxn = -#disprate&"*(sign("&#time&"-t)-sign(t-"&((1+#hold)*#time)&"))"
else
  #rfxn = -#disprate
endif
if #loading="rigid"
  Material "rigid","Loading Clamp","Rigid"
    direction 1
    SettingFunction #rfxn
    mirrored -1
  Done
else if #loading="contact"
  Material "rigid","Loading Clamp","Rigid"
    direction 8
    SettingFunction #rfxn
  Done
endif

! global archive
GlobalArchive sxx,#matID
GlobalArchive syy,#matID
GlobalArchive szz,#matID
GlobalArchive exxe,#matID
GlobalArchive "Strain Energy",#matID
GlobalArchive "Kinetic Energy",#matID
GlobalArchive "Plastic Energy",#matID
GlobalArchive "Heat Energy",#matID
if #loading="contact"
  GlobalArchive "contactx"
  GlobalArchive "contacty"
  if #analysis="3D MPM"
    GlobalArchive "contactz"
  endif
else if #loading="rigid"
  GlobalArchive "reactionx","rigid"
endif
GlobalArchive "reactionx",-11
GlobalArchiveTime (1+#hold+#unload)*#time/100

if #strain<0
  #gleft=-4*#cell
  #sides=(int(-#strain*#width/200/#cell)+4)
else
  #xtra=(int(#gridStrain*#length/100/#cell)+4)
  #gleft=-#xtra*#cell
  #sides=2
endif
#gright=#length+#cell
#gbot=-#sides*#cell
#gtop=#width+#sides*#cell
#zmin=-#sides*#cell
#zmax=#thick+#sides*#cell

! ********** Grid and Material Points Section **********
if #base="symmetry"
  GridHoriz int((#gright-#gleft)/#cell+.5),#length,1
else
  GridHoriz int((#gright-#gleft)/#cell+.5)
endif
if #fixsides="symmetry"
  GridVert int((#gtop-#gbot)/#cell+.5),0,-1,#width
else
  GridVert int((#gtop-#gbot)/#cell+.5)
endif
if #analysis="3D MPM"
  if #fixsides="symmetry"
    GridDepth int((#zmax-#zmin)/#cell+.5),0,-1,#thick
  else
    GridDepth int((#zmax-#zmin)/#cell+.5)
  endif
  GridRect #gleft,#gright,#gbot,#gtop,#zmin,#zmax
  
  ! material points
  Region #matID,0,0,0
    Box 0,#length,0,#width,0,#thick
  EndRegion
else
  GridThickness #thick
  GridRect #gleft,#gright,#gbot,#gtop
  
  ! material points
  if 1=1
    Region #matID,0,0,#thick
      Rect 0,#length,0,#width
    EndRegion
  else
    Repeat "#x",0,#length-#cell/4,#cell/2
      #velx=-#disprate*(#length-#x+#cell/4)/#length
      Region #matID,#velx,0,#thick
        Rect #x,#x+#cell/2,0,#width
      EndRegion
    EndRepeat
  endif
endif

! ********** Boundary Condition Section **********

! loading conditions
#t1=#time
#t2=(1+#hold)*#time
ifStr #loading="rigid"
  if #analysis="3D MPM"
    Region "rigid",1,0,0
      Box -#cell,0,-#sides*#cell,#width+#sides*#cell,-#sides*#cell,#thick+#sides*#cell
    EndRegion
  else
    Region "rigid",1,0,#thick
      Rect -#cell,0,-#sides*#cell,#width+#sides*#cell
    EndRegion
  endif
  
else if #loading="contact"
  if #analysis="3D MPM"
    Region "rigid",1,0,0
      Box -2*#cell,0,-#sides*#cell,#width+#sides*#cell,-#sides*#cell,#thick+#sides*#cell
    EndRegion
  else
    Region "rigid",1,0,#thick
      Rect -2*#cell,0,-#sides*#cell,#width+#sides*#cell
    EndRegion
  endif
  
else ifStr #loading="force"
  #forcerate=#stress*#width*#thick/#time		! total force rate on the end
  Comment "Stress rate = "&(#stress/#time)&" MPa/msec"
  if #hold+#unload>0
    #tpart="*(t-(t-"&#t1&")*sign(t-"&#t1&")-(t-"&#t2&")*sign(t-"&#t2&"))"
  else
    #tpart="*t"
  endif
  if #analysis="3D MPM"
    LoadBox 0,0,0,#cell/2,#width,#thick
      LoadType net
      Load x,function,(-#forcerate)&#tpart,0,-1
    EndLoadBox
  else
    LoadRect 0,#cell/2,0,#width
      LoadType net
      Load x,function,(-#forcerate)&#tpart,0,-1
    EndLoadRect
  endif
  
else ifStr #loading="traction"
  Comment "Stress rate = "&(#stress/#time)&" MPa/msec"
  if #hold+#unload>0
    #tpart="*(t-(t-"&#t1&")*sign(t-"&#t1&")-(t-"&#t2&")*sign(t-"&#t2&"))"
  else
    #tpart="*t"
  endif
  if #analysis="3D MPM"
    LoadBox 0,0,0,#cell/2,#width,#thick
      Traction x,4,function,(-#stress/#time)&#tpart,0,-1
    EndLoadBox
  else
    LoadRect 0,#cell/2,0,#width
      Traction x,4,function,(-#stress/#time)&#tpart,0,-1
    EndLoadRect
  endif
  
else ifStr #loading="thermal"
  ThermalRamp #deltaT,#time
  
endif

! Fixed bottom! set to #length + #cell/2 to only two rows for cells for GIMP
if #base!="symmetry"
  BoundaryID -11
  if #analysis="3D MPM"
    if #base="BC1"
      #bcell=#cell/2
    else
      #bcell=#cell
    endif
    MoveBox #length,-#sides*#cell,-#sides*#cell,#length+#bcell,#width+#sides*#cell,#thick+#sides*#cell
      Velocity x,constant,0
    EndMoveBox
  else
    if #base="BC1"
      #midpt=#length
    else
      #midpt=#length+#cell/2
    endif
    MoveLine #midpt,-#sides*#cell,#midpt,#width+#sides*#cell,0.55*#cell
      Velocity x,constant,0
    EndMoveLine
  endif
  BoundaryID
endif

! Fixed sides
if chars("\2\"&#fixsides)="BC"
  if #fixsides="BC1"
    #bcell=#cell/2
  else
    #bcell=#cell
  endif
  if #analysis="3D MPM"
    MoveBox #gleft,-#bcell,#zmin,#gright,0.1*#cell,#zmax
      Velocity y,constant,0
    EndMoveBox
    MoveBox #gleft,#width,#zmin,#gright,#width+#bcell,#zmax
      Velocity y,constant,0
    EndMoveBox
    MoveBox #gleft,#gbot,-#bcell,#gright,#gtop,0.1*#cell
      Velocity z,constant,0
    EndMoveBox
    MoveBox #gleft,#gbot,#thick,#gright,#gtop,#thick+#bcell
      Velocity z,constant,0
    EndMoveBox
  else
    if #fixsides="BC2"
      #midpt1=-#cell/2
      #midpt2=#width+#cell/2
    else
      #midpt1=0
      #midpt2=#width
    endif
    MoveLine #gleft,#midpt1,#gright,#midpt1,0.55*#cell
      Velocity y,constant,0
    EndMoveLine
    MoveLine #gleft,#midpt2,#gright,#midpt2,0.55*#cell
      Velocity y,constant,0
    EndMoveLine
  endif
endif


