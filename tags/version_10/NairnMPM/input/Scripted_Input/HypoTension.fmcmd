! Subroutines
! adjust limits (xmin,max,ymin,ymax) to contain the point
Sub CheckPoint,#xpt,#ypt
  #xtest=#cs*#xpt-#sn*#ypt
  if #xtest<#xmin
    #xmin=#xtest
  else if #xtest>#xmax
    #xmax=#xtest
  endif
  #ytest=#sn*#xpt+#cs*#ypt
  if #ytest<#ymin
    #ymin=#ytest
  else if #ytest>#ymax
    #ymax=#ytest
  endif
EndSub

! ********** Preamble Section **********
Title "Low Strain, Hypoelastic Tensile Loading"
Name "John Nairn"

! Header
Header
Simple tensile loading on various, hypoelastic, low-strain materials
2D or 3D uniaxial loading by various boundary conditions
Intended for development of these materials
EndHeader

! ------------ Parameters ---------------

! Analysis type: "Plane Strain MPM", "Plane Stress MPM", "Axisymmetric MPM", or "3D MPM"
#analysis$ = "3D MPM"

! pick a method usually "lCPDI" or "uGIMP" or "Dirac" or "qCPDI" (2D only_
#method$ = "uGIMP"
Processors 4

! pick strain update method usually "USF" or "USAVG"
#update$ = "USAVG"

! material options: isotropic, iptrans, normtrans, ortho, isoplasticity, mgeos
! bistable, viscoelastic, hill, wood
#matID$="isotropic"

! hardening law (if allowed) for current material
!	options Linear, Nonlinear, Nonlinear2, JohnsonCook
#hardID$ = "Nonlinear"

! Dimensions
#cell=2
#length=40			! length
#width=10			! width
#thick=10			! thickness

! rotate sample to test off-grid loading (2D only)
#rotate = 0

! Load by strain (estimated for force and traction loads)
#loading$ = "traction"	! Loading = "force", "traction", "rigid", "contact", "thermal"
#fixsides$ = "no"	! "yes" or "no" for sides fixed in y direction (2D) or y and z (3D)
#strain = 5	        ! Maximum strain (%) (stress needed is estimated for force and tractions using base modulus) of dT if thermal

! Loading rate
#relRate = 1		! loading rate as percent of wave speed
#hold = 0		! hold time (multiple of loading time)
#unload = 0		! 0 no unload or >0 for unloading time (multiple of loading time, but at same loading rate)

! Damping parameter - for feedback or regular, depending on BCs
#damp = 0
#fbdamp = 0.0
#factor = 0.4			! time step factor

! temperature option to test energy coupling
StressFreeTemp 294
#startTemp = 294
#conduct$ = "no"		  ! yes or no for conduction
#tmode$ = "isothermal"		! "iosthermal" or adiabatic modes

! *********************** Start Calculation Commands **************************
! Analysis type
Analysis #analysis$
MPMMethod #update$,#method$
Conduction #conduct$,#tmode$

! Material Definitions
! Each material must use, or change to another value
#Ebase=1000
#rho=1
#nuBase=.33
#aBase=60
#yldstrain=1
#isPlastic$="no"
#angle=0			! 2D z rotation angle for anisotopic materials

if #matID$="isotropic"
  Material "isotropic","Isotropic Material","Isotropic"
    E #Ebase
    nu #nuBase
    a #aBase
    rho #rho
  Done
endif

if #matID$="isoplasticity"
  #isPlastic$="yes"
  Material "isoplasticity","Isotropic Elastic-Plastic Material","IsoPlasticity"
    E #Ebase
    nu #nuBase
    a #aBase
    rho #rho
    if #hardID$!=""
      hardening #hardID$
    endif
    if #hardID$="Linear"
      yield abs(#Ebase*#yldstrain/100)
      Ep #Ebase/5
      kCond .202
      Cv 1256
    else if #hardID$="Nonlinear"
      yield abs(#Ebase*#yldstrain/100)
      Khard 500
      nhard .24
      kCond .202
      Cv 1256
    else if #hardID$="Nonlinear2"
      yield abs(#Ebase*#yldstrain/100)
      Khard 1
      nhard .5
      kCond .202
      Cv 1256
    else if #hardID$="JohnsonCook"
      ! For Copper use E=120000,rho=8.96,nu=.25,alpha=0
      Ajc 90
      Bjc 292
      njc .31
      Cjc 0.025
      ep0jc 1
      Tmjc 1356
      mjc 1.09
      kCond 0.202
      Cv 383
    endif
  Done
endif

if #matID$="mgeos"
  !   For MGSCGL, #Ebase=K=#rho*C0^2, e.g. for Tungsten rho=19.256, C0=4004,
  !				K=0.001 rho C0^2 MPa (rho in g/cm^2, C0 in m/sec)
  ! Copper
  #Ebase= 120000
  #rho=8.96
  #nuBase=.25
  #aBase=0

  ! Tungston
  #Ebase=308776
  #rho=19.256
  #nuBase=.28
  #aBase=4.5

  #isPlastic$="yes"
  #C0base = sqrt(1000*#Ebase/#rho)
  #Gbase = 3*#Ebase*(1-2*#nuBase)/(2*(1+#nuBase))
  Material #matID$,"Tungsten","MGEOSMaterial"
    C0 #C0base
    S1 1.35
    S2 0
    S3 0
    gamma0 1.64
    rho #rho
    G #Gbase
    Cv 134
    if #hardID$!=""
      hardening #hardID$
    endif
    if #hardID$="Linear"
      yield abs(#Ebase*#yldstrain/100)
      ET #Ebase/3
    else if #hardID$="Nonlinear"
      yield abs(#Ebase*#yldstrain/200)
      Khard 5000
      nhard .24
    else if #hardID$="JohnsonCook"
      Ajc 90
      Bjc 292
      njc .31
      Cjc 0.025
      ep0jc 1
      Tmjc 1356
      mjc 1.09
    else if #hardID$="SCGL"
      yield 2200
      GPpG0 0.01e-3
      GTpG0 -2.2e-4
      !GPpG0 0
      !GTpG0 0
      yieldMax 4000
      betahard 7.7
      nhard 0.13
    endif
      Cv 383
      kCond 0.202
  Done
endif

if #matID$="viscoelastic"
  Material "viscoelastic","Viscoelastic Material","Viscoelastic"
    K #Ebase/(3*(1-2*#nuBase))
    G0 #Ebase/(4*(1+#nuBase))
    Gk #Ebase/(4*(1+#nuBase))
    tauk 20*#transit/1000
    a #aBase
    rho #rho
  Done
endif

if #matID$="bistable"
  ToArchive history1
  Material "bistable","Two State Material","Bistable"
    K0 #Ebase/(3*(1-2*#nuBase))
    G0 #Ebase/(2*(1+#nuBase))
    a0 #aBase
    Kd 0.5*#Ebase/(3*(1-2*#nuBase))
    Gd 0.5*#Ebase/(2*(1+#nuBase))
    DeltaVOffset 0
    critical #strain/4
    transition dilation
    reversible yes
    rho #rho
  Done
endif

if #matID$="normtrans"
  Material "normtrans","In-Plane Isotropic Material",2
    ET #Ebase
    EA 10*#Ebase
    nuA .2
    nuT .33
    GA #Ebase/5
    aA 20
    aT 60
    rho #rho
  Done
endif

if #matID$="iptrans"
  Material "iptrans","Transversely Isotropic Material",3
    ET #Ebase
    EA #Ebase/5
    nuA .1
    nuT #nuBase
    GA #Ebase/5
    aA #aBase/5
    aT #aBase
    rho #rho
  Done
endif

if #matID$="ortho"
  Material "ortho","Orthotropic Material",4
    Ex #Ebase
    Ey #Ebase/10
    Ez #Ebase/5
    nuxy .25
    nuxz .25
    nuyz .35
    Gxy #Ebase/5
    Gxz #Ebase/5
    Gyz #Ebase/10
    ax 20
    ay 40
    az 60
    rho #rho
  Done
endif

if #matID$="hill"
  #isPlastic$="yes"
  Material "hill","Orthotropic Hill Plastic",15
    Ex #Ebase
    Ey #Ebase/3
    Ez 2*#Ebase
    nuxy .33
    nuxz .25
    nuyz .2
    Gxy #Ebase/(4*1.33)
    Gxz 2*#Ebase/(2*1.33)
    Gyz 2*#Ebase/(2*1.33)
    ax 60
    ay 60
    az 60
    rho #rho
    yldxx abs(#Ebase*#yldstrain/100)
    yldyy abs(#Ebase*#yldstrain/100)
    yldzz abs(#Ebase*#yldstrain/100)
    yldxy abs(#Ebase*#yldstrain/100/sqrt(3))
    Khard 100
    nhard 1
  Done
endif

if #matID$="wood"
  #isPlastic$="yes"
  XMLData Material,"wood"
  <Material Type="19" Name="Orthotropic Wood Material">
    <rho>10</rho>
    <yldxx>0.5</yldxx>
    <yldyy>0.5</yldyy>
    <yldzz>0.5</yldzz>
    <yldxy>0.288675135</yldxy>
    <Khard>5</Khard>
    <nhard>2</nhard>
    <Ex>100</Ex>
    <Ey>100</Ey>
    <Ez>100</Ez>
    <Gxy>37.593984962</Gxy>
    <Gxz>37.593984962</Gxz>
    <Gyz>37.593984962</Gyz>
    <nuxy>0.33</nuxy>
    <nuxz>0.33</nuxz>
    <nuyz>0.33</nuyz>
    <alphax>60</alphax>
    <alphay>60</alphay>
    <alphaz>60</alphaz>
    <betax>0</betax>
    <betay>0</betay>
    <betaz>0</betaz>
    <kCondx>0</kCondx>
    <kCondy>0</kCondy>
    <kCondz>0</kCondz>
    <Dx>0</Dx>
    <Dy>0</Dy>
    <Dz>0</Dz>
    <tempC1>104.31</tempC1>
    <tempC2>-.1994</tempC2>
  </Material>
  EndXMLData
endif

! ------------ Calculations ---------------

! varies with loading type
if #loading$="contact"
  ! convert to contact
  if #strain>0
    Stop "'contact' mode only for compression (could try tension with imperfect interface contact)"
  endif
  MultimaterialMode 0,enabled,maxgrad,100
  FrictionMM 0
  XMLData "Header"
    <DevelFlag Number='0'>3</DevelFlag>
    <DevelFlag Number='1'>1</DevelFlag>
  EndXMLData

else if #loading$="thermal"
  ! Strain is dT and then get expected final thermal strain
  #deltaT=#strain
  #strain=#aBase*#deltaT/10000
  #unload=0

else if #fixsides$="no"
  ! stress used by force and tractions
  #stress=#Ebase*#strain/100

else
  ! stress used by force and tractions
  #Kbulk=#Ebase/(2*(1-#nuBase))
  #stress=#Kbulk*#strain/100
endif

! calculate time to reach peak state
#speed = 1000*sqrt(#Ebase*1000/#rho)		! elastic wave speed in mm/s
#disp = #strain*#length/100			! mm of displacement
#disprate = #relRate*#speed/100
if #strain<0
  #disprate=-#disprate
endif
#time = abs(1000*#disp/#disprate)

! get sine and cosine of rotation angle
! Cannot rotate 3D or fixed sides
if #rotate!=0
  if #analysis$="3D MPM"
    #rotate=0
  endif
  #cs=cos(3.14159265*#rotate/180)
  #sn=-sin(3.14159265*#rotate/180)
endif

! Archiving
if #fixsides$="yes"
  Archive "Results/ConstrainedTension/"&#analysis$&"-"&#method$&"-"&#update$&"/"&#loading$&"/"&#matID$
else
  Archive "Results/Tension/"&#analysis$&"-"&#method$&"-"&#update$&"/"&#loading$&"/"&#matID$
endif
TimeStep 1000,(1+#hold+#unload)*#time,#factor
ArchiveTime (1+#hold+#unload)*#time/50
ToArchive velocity,stress,strain,strainenergy,elementcrossings,rotStrain,workenergy,heatenergy

if #isPlastic$="yes"
  ToArchive plasticstrain,plasticenergy,history1,temperature
endif

! displacement functions for rigidd materials
#rfxn$ = "*(sign("&#time&"-t)-sign(t-"&((1+#hold)*#time)&"))"

! add rigid materials and set damping
#ke=0
if #loading$="rigid"
  Material "rigid","Loading Clamp","Rigid"
    if #rotate!=0
      direction 3
      SettingFunction (#cs*#disprate)&#rfxn$
      SettingFunction2 (#sn*#disprate)&#rfxn$
    else
      direction 1
      SettingFunction #disprate&#rfxn$
      mirrored 1
    endif
  Done
  Comment "Displacement rate = "&(#disprate/1000)&" m/sec"
  #ke = (1/6)*#rho*#disprate*#disprate*#length*#width*#thick/10^6
  Comment "Base kinetic energy = "&(#ke/10^6)&" J"

else if #loading$="contact"
  Material "rigid","Loading Clamp","Rigid"
    if #rotate!=0
      direction 8
      SettingFunctionx (#cs*#disprate)&#rfxn$
      SettingFunctiony (#sn*#disprate)&#rfxn$
    else
      direction 8
      SettingFunction #disprate&#rfxn$
    endif
  Done

endif

! Turn on damping and archiving for damping
if #fbdamp>0
  FeedbackDamping #fbdamp,#ke
  GlobalArchive alpha
  GlobalArchive "Kinetic Energy"
endif
if #damp>0
  Damping #damp
endif

! global archive
GlobalArchiveTime (1+#hold+#unload)*#time/100
GlobalArchive sxx,#matID$
GlobalArchive syy,#matID$
GlobalArchive szz,#matID$
GlobalArchive exx,#matID$
GlobalArchive "Strain Energy",#matID$
if #isPlastic$="yes"
  GlobalArchive exxe,#matID$
  GlobalArchive exxp,#matID$
  GlobalArchive "Plastic Energy",#matID$
endif

! reaction and contact forces
if #rotate!=0
  #rID=-1
else
  #rID=-10
endif
GlobalArchive "reactionx",#rID
if #loading$="contact"
  GlobalArchive "contactx"
endif

! Grid dimensions
#gleft=-#cell
if #strain<0
  #gright=#length+4*#cell
  #sides=(int(-#strain*#width/200/#cell)+2)
else
  #xtra=(int(1.6*#strain*#length/100/#cell)+2)
  #gright=#length+#xtra*#cell
  #sides=1
endif
#gbot=-#sides*#cell
#gtop=#width+#sides*#cell
#zmin=-#sides*#cell
#zmax=#thick+#sides*#cell

! adjust grid limits if rotated
if #rotate!=0
  #xmin=0.5*(#gleft+#gright)
  #xmax=#xmin
  #ymin=0.5*(#gbot+#gtop)
  #ymax=#ymin

  GoSub CheckPoint,#gleft,#gbot
  GoSub CheckPoint,#gright,#gbot
  GoSub CheckPoint,#gright,#gtop
  GoSub CheckPoint,#gleft,#gtop

  #gleft=#cell*int(#xmin/#cell)
  #gright=#cell*int(#xmax/#cell)
  #gbot=#cell*int(#ymin/#cell)
  #gtop=#cell*int(#ymax/#cell)
endif

! ********** Grid and Material Points Section **********

! x uses symmetry plane BC (unless rotated)
if #rotate!=0
  GridHoriz int((#gright-#gleft)/#cell+.5)
else
  GridHoriz int((#gright-#gleft)/#cell+.5),0,-1
endif
GridVert int((#gtop-#gbot)/#cell+.5)
if #analysis$="3D MPM"
  GridDepth int((#zmax-#zmin)/#cell+.5)
  GridRect #gleft,#gright,#gbot,#gtop,#zmin,#zmax
  
  ! material points for object
  Region #matID$,0,0,0,"angle",#angle,"temp",#startTemp
    Box 0,#length,0,#width,0,#thick
  EndRegion
else
  GridThickness #thick
  GridRect #gleft,#gright,#gbot,#gtop
  
  ! material points
  if #rotate!=0
    Region #matID$,0,0,#thick,"angle",#angle,"temp",#startTemp
      PolyPt 0,0
      PolyPt #cs*#length,#sn*#length
      PolyPt #cs*#length-#sn*#width,#sn*#length+#cs*#width
      PolyPt -#sn*#width,#cs*#width
    EndRegion
  else
    Region #matID$,0,0,#thick,"angle",#angle,"temp",#startTemp
      Rect 0,#length,0,#width
    EndRegion
  endif
endif

! ********** Boundary Condition Section **********

! loading conditions
! rigid or contact - loading by function calculated above
! force - load until #stress in #time and then hold
! traction - load until #stress in #time and then hold
! thermal - load until #deltaT in #time and then hold
#t1=#time
#t2=(1+#hold)*#time
ifStr #loading$="rigid"
  if #analysis$="3D MPM"
    Region "rigid",1,0,0
      Box #length,#length+#cell,-#sides*#cell,#width+#sides*#cell,-#sides*#cell,#thick+#sides*#cell
    EndRegion
  else if #rotate!=0
    Region "rigid",1,0,#thick
      PolyPt #cs*#length+#sn*#sides*#cell,#sn*#length-#cs*#sides*#cell
      PolyPt #cs*(#length+#cell)+#sn*#sides*#cell,#sn*(#length+#cell)-#cs*#sides*#cell
      PolyPt #cs*(#length+#cell)-#sn*(#width+#sides*#cell),#sn*(#length+#cell)+#cs*(#width+#sides*#cell)
      PolyPt #cs*#length-#sn*(#width+#sides*#cell),#sn*#length+#cs*(#width+#sides*#cell)
    EndRegion
  else
    Region "rigid",1,0,#thick
      Rect #length,#length+#cell,-#sides*#cell,#width+#sides*#cell
    EndRegion
  endif

else if #loading$="contact"
  if #analysis$="3D MPM"
    Region "rigid",1,0,0
      Box #length,#length+#cell,-#sides*#cell,#width+#sides*#cell,-#sides*#cell,#thick+#sides*#cell
    EndRegion
  else if #rotate!=0
    Region "rigid",1,0,#thick
      PolyPt #cs*#length+#sn*#sides*#cell,#sn*#length-#cs*#sides*#cell
      PolyPt #cs*(#length+#cell)+#sn*#sides*#cell,#sn*(#length+#cell)-#cs*#sides*#cell
      PolyPt #cs*(#length+#cell)-#sn*(#width+#sides*#cell),#sn*(#length+#cell)+#cs*(#width+#sides*#cell)
      PolyPt #cs*#length-#sn*(#width+#sides*#cell),#sn*#length+#cs*(#width+#sides*#cell)
    EndRegion
  else
    Region "rigid",1,0,#thick
      Rect #length,#length+#cell,-#sides*#cell,#width+#sides*#cell
    EndRegion
  endif

else ifStr #loading$="force"
  #forcerate=#stress*#width*#thick/#time		! total force rate on the end
  Comment "Stress rate = "&(#stress/#time)&" MPa/msec"
  if #hold+#unload>0
    #tpart$="*(t-(t-"&#t1&")*sign(t-"&#t1&")-(t-"&#t2&")*sign(t-"&#t2&"))"
  else
    #tpart$="*t"
  endif
  if #analysis$="3D MPM"
    LoadBox #length-#cell/2,0,0,#length,#width,#thick
      LoadType net
      Load x,function,(#forcerate)&#tpart$,0,-1
    EndLoadBox
  else if #rotate!=0
    #x1=#cs*(#length-#cell/4)
    #y1=#sn*(#length-#cell/4)
    #x2=#cs*(#length-#cell/4)-#sn*#width
    #y2=#sn*(#length-#cell/4)+#cs*#width
    LoadLine #x1,#y1,#x2,#y2,#cell/4
      LoadType net
      Load x,function,(#cs*#forcerate)&#tpart$,0,-1
      Load y,function,(#sn*#forcerate)&#tpart$,0,-1
    EndLoadLine
  else
    LoadRect #length-#cell/2,#length,0,#width
      LoadType net
      Load x,function,(#forcerate)&#tpart$,0,-1
    EndLoadRect
  endif

else ifStr #loading$="traction"
  Comment "Stress rate = "&(#stress/#time)&" MPa/msec"
  if #hold+#unload>0
    #tpart$="*(t-(t-"&#t1&")*sign(t-"&#t1&")-(t-"&#t2&")*sign(t-"&#t2&"))"
  else
    #tpart$="*t"
  endif
  if #analysis$="3D MPM"
    LoadBox #length-#cell/2,0,0,#length,#width,#thick
      Traction x,4,function,(#stress/#time)&#tpart$,0,-1
    EndLoadBox
  else if #rotate!=0
    Stop "Traction loads cannot be used with rotated specimens (yet)"
  else
    LoadRect #length-#cell/2,#length,0,#width
      Traction x,2,function,(#stress/#time)&#tpart$,0,-1
    EndLoadRect
  endif

else ifStr #loading$="thermal"
  ThermalRamp #deltaT,#time
endif

! Fixed bottom by symmetry plane unless rotated
if #rotate!=0
  BoundaryID -1
  #midpt=-#cs*#cell/2+#sn*#sides*#cell
  #y1=-#sn*#cell/2-#cs*#sides*#cell
  #midpt2=-#cs*#cell/2-#sn*(#width+#sides*#cell)
  #y2=-#sn*#cell/2+#cs*(#width+#sides*#cell)
  MoveLine #midpt,#y1,#midpt2,#y2,#cell
    Velocity skewxy,constant,0,0,#rotate
  EndMoveLine
  BoundaryID
endif

! Fixed sides
if #fixsides$="yes"
  if #analysis$="3D MPM"
    #midpt=-#cell/2
    MoveBox #gleft,-1.01*#cell,#zmin,#gright,.01*#cell,#zmax
      Velocity y,constant,0
    EndMoveBox
    MoveBox #gleft,#width-.01*#cell,#zmin,#gright,#width+1.01*#cell,#zmax
      Velocity y,constant,0
    EndMoveBox
    MoveBox #gleft,#gbot,-1.01*#cell,#gright,#gtop,.01*#cell
      Velocity z,constant,0
    EndMoveBox
    MoveBox #gleft,#gbot,#thick-.01*#cell,#gright,#gtop,#thick+1.01*#cell
      Velocity z,constant,0
    EndMoveBox
  else if #rotate!=0
    Stop "Fixed sides cannot be used with rotated specimens (yet)"
  else
    #midpt=-#cell/2
    MoveLine #gleft,#midpt,#gright,#midpt,#cell
      Velocity y,constant,0
    EndMoveLine
    #midpt=#width+#cell/2
    MoveLine #gleft,#midpt,#gright,#midpt,#cell
      Velocity y,constant,0
    EndMoveLine
  endif
endif

! 3D Archived
if #analysis$="3D MPM"
  CustomTask "VTKArchive"
  Parameter "mass"
  Parameter "material"
  Parameter "stress"
  Parameter "strain"
  Parameter "velocity"
  Parameter "displacement"
  Parameter "strainenergy"
  if #isPlastic$="yes"
    Parameter "plasticstrain"
    Parameter "plasticenergy"
  endif
endif